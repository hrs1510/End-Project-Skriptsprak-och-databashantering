<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/../End Project - Skriptspråk och.databashantering/js/app.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/../End Project - Skriptspråk och.databashantering/js/app.js" />
              <option name="originalContent" value="const API_KEY = '2a61739e21f2ca9dca35f8447613169f';  // Api key for themoviedb generated from account&#10;const BASE_URL = 'https://api.themoviedb.org/3';      // Base URL for The Popular Movies Database API&#10;const Poster_URL = 'https://image.tmdb.org/t/p/w500'; // Base URL for movie posters&#10;&#10;// prefer existing #results container (added in index.html), fallback to #movie&#10;const movie = document.getElementById('results');&#10;// popular movies&#10;const movie_url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&amp;language=en-US&amp;page=1`;&#10;&#10;async function movieData() {&#10;  if (!movie) {&#10;    console.error('No element with id &quot;movie&quot; found.');&#10;    return;&#10;  }&#10;&#10;  try {&#10;    const response = await fetch(movie_url);&#10;    if (!response.ok) throw new Error(`Fetch failed: ${response.status} ${response.statusText}`);&#10;    const data = await response.json();&#10;&#10;    const results = data.results;&#10;&#10;    // create a simple list&#10;    const ul = document.createElement('ul');&#10;    ul.className = 'movie-list';&#10;&#10;    results.forEach(item =&gt; {&#10;      const li = document.createElement('li');&#10;      li.className = 'movie-item';&#10;&#10;      // poster (if available)&#10;      if (item.poster_path) {&#10;        const img = document.createElement('img');&#10;        img.src = Poster_URL + item.poster_path;&#10;        img.alt = item.title || 'Movie poster';&#10;        img.width = 120;&#10;        img.loading = 'lazy';&#10;        li.appendChild(img);&#10;      }&#10;&#10;      // title&#10;      const span = document.createElement('span');&#10;      span.className = 'movie-title';&#10;      span.textContent = item.title || 'Untitled';&#10;      li.appendChild(span);&#10;&#10;      ul.appendChild(li);&#10;    });&#10;&#10;    // clear previous content and append list&#10;    movie.innerHTML = '';&#10;    movie.appendChild(ul);&#10;&#10;  } catch (err) {&#10;    console.error(err);&#10;    movie.textContent = 'Failed to load movies.';&#10;  }&#10;}&#10;&#10;movieData();&#10;" />
              <option name="updatedContent" value="const API_KEY = '2a61739e21f2ca9dca35f8447613169f';  // Api key for themoviedb generated from account&#10;const BASE_URL = 'https://api.themoviedb.org/3';      // Base URL for The Popular Movies Database API&#10;const Poster_URL = 'https://image.tmdb.org/t/p/w500'; // Base URL for movie posters&#10;&#10;// prefer existing movies container (try several ids)&#10;const moviesContainer = document.getElementById('movies-container') || document.getElementById('results') || document.getElementById('movie');&#10;// popular movies URL&#10;const movie_url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&amp;language=en-US&amp;page=1`;&#10;&#10;const movieData = async () =&gt; {&#10;  if (!moviesContainer) {&#10;    console.error('No element found for movies container (movies-container / results / movie)');&#10;    return;&#10;  }&#10;&#10;  try {&#10;    const response = await fetch(movie_url);&#10;    if (!response.ok) throw new Error(`Fetch failed: ${response.status} ${response.statusText}`);&#10;    const data = await response.json();&#10;    const results = Array.isArray(data.results) ? data.results : [];&#10;&#10;    // find or create the list&#10;    let ul = document.getElementById('movie-list');&#10;    if (!ul) {&#10;      ul = document.createElement('ul');&#10;      ul.id = 'movie-list';&#10;    } else {&#10;      ul.innerHTML = '';&#10;    }&#10;&#10;    // append each movie as an li to the ul&#10;    results.forEach(m =&gt; {&#10;      const li = document.createElement('li');&#10;      li.className = 'movie-item';&#10;      li.textContent = m.title || 'Untitled';&#10;      ul.appendChild(li);&#10;    });&#10;&#10;    // attach list once to the container&#10;    moviesContainer.innerHTML = '';&#10;    moviesContainer.appendChild(ul);&#10;&#10;  } catch (err) {&#10;    console.error(err);&#10;    moviesContainer.textContent = 'Failed to load movies.';&#10;  }&#10;};&#10;&#10;movieData();" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>